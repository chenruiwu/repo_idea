<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.lagou.dao.UserMapper">

    <!--用户分页&多条件组合查询-->
    <select id="findAllUserByPage" parameterType="com.lagou.domain.UserVo" resultType="com.lagou.domain.User">
        SELECT from user
        <where>
            <if test="true">
                and is_del != 1
            </if>
            <if test="username != null and username !=''" >
                and name = #{username}
            </if>
            <if test="startCreateTime != null and endCreateTime != null">
                and create_time BETWEEN #{startCreateTime} AND #{endCreateTime}
            </if>
        </where>
    </select>

    <!-- 修改用户状态 -->
    <update id="updateUserStatus">
        UPDATE USER SET STATUS = #{status} where id = #{id};
    </update>

    <!--根据用户名查询用户-->
    <select id="login" parameterType="com.lagou.domain.User" resultType="com.lagou.domain.User">
        select * from user where phone = #{phone}
    </select>

    <!--根据用户id查询关联的角色信息-->
    <select id="findUserRelationRoleById" resultType="com.lagou.domain.Role" parameterType="int">
        SELECT * FROM roles r INNER JOIN user_role_relation ur ON r.id = ur.role_id where ur.user_id = #{userid}
    </select>

    <!--根据userid清空中间表关系-->
    <delete id="deleteUserContextRole" parameterType="int">
        delete from user_role_relation where user_id = #{userid}
    </delete>

    <!--用户角色关联 void userContextRole(Integer userId, Integer roleid);-->
    <insert id="userContextRole" parameterType="com.lagou.domain.User_Role_relation">
        insert into user_role_relation values(null,#{userId},#{roleId},
        #{createdTime},#{updatedTime},#{createdBy},#{updatedby})
    </insert>

    <!--根据用户id查询关联的角色信息-->
    <select id="findUserRelationRoleById" resultType="com.lagou.domain.Role" parameterType="int">
        SELECT * FROM roles r INNER JOIN user_role_relation ur ON r.id = ur.role_id where ur.user_id = #{userid}
    </select>

    <!--2.根据id查询角色所拥有的顶级菜单-->
    <select id="findParentMenuByRoleId" parameterType="java.util.List" resultType="com.lagou.domain.Menu">
        SELECT
        DISTINCT m.*
        FROM roles r INNER JOIN role_menu_relation rm ON r.`id` = rm.role_id
        INNER JOIN menu m ON rm.menu_id = m.id
        WHERE m.parent_id = -1 AND r.id IN
        <foreach collection="list" item="item" open="(" separator="," close=")">
        #{item}
        </foreach>
        GROUP BY m.id
    </select>

    <!-- 根据PID 查找子菜单 -->
    <select id="findSubMenuByPid" resultType="com.lagou.domain.Menu">
        select * from menu where parent_id = #{pid}
    </select>

    <!-- 获取用户拥有的资源权限 -->
    <select id="findResourceByRoleId" parameterType="java.util.List"
            resultType="com.lagou.domain.Resource">
        SELECT
        DISTINCT rc.*
        FROM roles r INNER JOIN role_resource_relation rrr ON r.id =
        rrr.role_id
        INNER JOIN resource rc ON rrr.resource_id = rc.id WHERE r.id IN
        <foreach item="item" index="index" collection="list" open="("
             separator="," close=")">
            #{item}
            </foreach>
            GROUP BY rc.id;
        </select>

</mapper>
